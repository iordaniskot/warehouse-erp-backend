version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: warehouse-erp-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: warehouse
      MONGO_INITDB_ROOT_PASSWORD: warehouse123
      MONGO_INITDB_DATABASE: warehouse-erp
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - warehouse-network

  # Redis cache
  redis:
    image: redis:7.2-alpine
    container_name: warehouse-erp-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - warehouse-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: warehouse-erp-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://warehouse:warehouse123@mongodb:27017/warehouse-erp?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_ACCESS_SECRET: your-super-secret-access-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - warehouse-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  warehouse-network:
    driver: bridge
